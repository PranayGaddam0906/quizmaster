{
		"question": "What is the size of a Char?",
		"options" : [
				"4 bits",
				"7 bits",
				"8 bits",
				"16 bits"
		],
		"correct_answer":"option4"
	}$
	{
		"question": "Which of those doesn’t have an index based structure?",
		"options" : [
				"List",
				"Set",
				"Map",
				"Array"
		],
		"correct_answer":"option2"
	}$
	{
		"question": "java.util.Collections is a:",
		"options" : [
				"Class",
				"Interface",
				"Object",
				"None of the above"
		],
		"correct_answer":"option1"
	}$
	{
		"question": "Methods such as reverse, shuffle are offered in:",
		"options" : [
				"Object",
				"Collection",
				"Collections",
				"Apache common collections"
		],
		"correct_answer":"option3"
	}$
	{
		"question": "Which allows the storage of a null key and null values?",
		"options" : [
				"Hashtable",
				"Hashmap",
				"Both",
				"None"
		],
		"correct_answer":"option2"
	}$
	{
	"question": "What will be the output of the following code",
	"code": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class MyClass {\n    public static void main(String args[]) {\n        // Insert Here\n        List<String> list = new ArrayList<String>();\n        list.add(\"a\");\n        list.add(\"b\");\n        l.add(list);\n    }\n}",
	"options": [
		"List l=new ArrayList();",
		"List> l=new ArrayList();",
		"List> l=new ArrayList();",
		"List l=new ArrayList();"
	],
	"correct_answer": "option4"
}
$
	{
	"question": "What will be the output of the following code",
	"code": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class ArrayListTest {\n    public static void main(String args[]) {\n        List<String> arrayList = new ArrayList<String>();\n        arrayList.add(\"a\");\n        arrayList.add(\"b\");\n        arrayList.add(\"c\");\n\n        System.out.println();\n        arrayList.add(1, \"d\");\n        System.out.println(arrayList);\n    }\n}",
	"options": [
		"[a, d, b, c]",
		"[a, b, c, d]",
		"[d, a, d, c]",
		"None of the above"
	],
	"correct_answer": "option1"
}
$
	{
	"question": "What will be the output of the following code",
	"code": "import java.util.List;\n\npublic class ArrayListTest {\n    public static void main(String args[]) {\n        List<String> arrayList = new ArrayList<String>();\n\n        arrayList.add(\"a\");\n        arrayList.add(\"a\");\n        arrayList.clear();\n        arrayList.add(\"b\");\n        arrayList.add(\"b\");\n\n        System.out.println(arrayList.size());\n    }\n}",
	"options": [
		"1",
		"2",
		"3",
		"4"
	],
	"correct_answer": "option2"
}
$
	{
	"question": "What will be the output of the following code",
	"code": "import java.util.Collection;\nimport java.util.HashSet;\nimport java.util.Set;\nimport java.util.TreeSet;\n\npublic class SortSet {\n    public static void main(String... a) {\n        Collection<Integer> collection = new HashSet<Integer>();\n        collection.add(3);\n        collection.add(1);\n        collection.add(2);\n\n        Set<Integer> treeSet = new TreeSet<Integer>(collection);\n        System.out.println(treeSet);\n    }\n}",
	"options": [
		"[1, 2, 3]",
		"Runtime exception",
		"[3, 2, 1]",
		"None of the above"
	],
	"correct_answer": "option1"
}
$
	{
		"question": "Which interface should be implemented for sorting on basis of many criteria’s?",
		"options" : [
				"Comparator",
				"Comparable",
				"Serializable",
				"None of the above"
		],
		"correct_answer":"option1"
	}$
	{
		"question": "Automatic type conversion is possible in which of the possible cases?",
		"options" : [
				"Byte to Int",
				"Int to Long",
				"Long to Int",
				"Short to Int"
		],
		"correct_answer":"option2"
	}$
	{
	"question": "What will be the output of the following code?",
	"code": "public class Solution {\n\tpublic static void main(String[] args) {\n\t\tbyte x = 127;\n\t\tx++;\n\t\tx++;\n\t\tSystem.out.print(x);\n\t}\n}",
	"options": [
		"-127",
		"127",
		"129",
		"2"
	],
	"correct_answer": "option1"
}
$
	{
		"question": "When an array is passed to a method, what does the method receive?",
		"options" : [
				"The reference of the array",
				"A copy of the array",
				"Length of the array",
				"Copy of the first element"
		],
		"correct_answer":"option1"
	}$
	{
	"question": "Find the value of A[1] after the execution of the following program.",
	"code": "int[] A = {0, 2, 4, 1, 3};\nfor(int i = 0; i < A.length; i++) {\n\tA[i] = A[(A[i] + 3) % A.length];\n}",
	"options": [
		"0",
		"1",
		"2",
		"3"
	],
	"correct_answer": "option2"
}
$
	{
		"question": "Arrays in java are-",
		"options" : [
				"Object references",
				"Objects",
				"Primitive data type",
				"None"
		],
		"correct_answer":"option2"
	}$
	{
	"question": "Identify the correct restriction on static methods.",
	"options": [
		"They must access only static data.",
		"They can only call other static methods.",
		"They cannot refer to this or super."
	],
	"correct_answer": "option4"
}
$
	{
		"question": "In which of the following is toString() method defined?",
		"options" : [
				"java,lang.Object",
				"java.lang.String",
				"java.lang.util",
				"none"
		],
		"correct_answer":"option1"
	}$
	{
		"question": "Number of total constructor string class have?",
		"options" : [
				"3",
				"7",
				"13",
				"20"
		],
		"correct_answer":"option3"
	}$
	{
		"question": "Where does the system stores parameters and local variables whenever a method is invoked?",
		"options" : [
				"Heap",
				"Stack",
				"Array",
				"Tree"
		],
		"correct_answer":"option2"
	}